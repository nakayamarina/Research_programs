install.package("R6")
install.packages("R6")
Japan
library(R6)
Q
quit
quit()
setwd("~/Desktop/nakayama/Research/Research_programs")
PATH <- '../tameshi/20170130ar/12ch/'
tau_method <- 'autocor'
ms <- 3
PATH_rest <- paste(PATH, 'raw_rest.csv', sep = "")
PATH_tap <- paste(PATH, 'raw_tap.csv', sep = "")
PATH_tau <- paste(PATH, 'TAU', tau_method, '.csv', sep = "")
rest <- read.csv(PATH_rest)
tap <- read.csv(PATH_tap)
taus <- read.csv(PATH_tau)
DIR_attractor <- paste(PATH, 'TDAvec_attractor', sep="")
dir.create(DIR_attractor)
DIR_attractor <- paste(PATH, 'TDAvec_autocor_attractor', sep="")
PATH_attractor <- paste(DIR_attractor, '/', sep="")
PATH_attractor
file.exists(PATH_attractor)
if(!(file.exists(PATH_attractor)){dir.create(DIR_attractor)}
!file.exists(PATH_attractor)
if(!file.exists(PATH_attractor){dir.create(DIR_attractor)}
if(!file.exists(PATH_attractor){ dir.create(DIR_attractor)}
if(!file.exists(PATH_attractor){
if(!file.exists(PATH_attractor) {
if(!file.exists(PATH_attractor)) {
dir.create(DIR_attractor)
}
if(!file.exists(PATH_attractor)) {
dir.create(DIR_attractor)
}
PATH <- '../tameshi/20170130ar/12ch/'
ms <- 3
DIR_attractor <- paste(PATH, 'TDAvec_autocor_attractor', sep="")
PATH_attractor <- paste(DIR_attractor, '/', sep="")
if(!file.exists(PATH_attractor)) {
dir.create(DIR_attractor)
}
Attractor <- function(voxel, tau, voxel_no, task){
x <- voxel[1:(nrow(voxel) - (2*tau)), 1]
y <- voxel[(1 + tau):(nrow(voxel) - tau), 1]
z <- voxel[(1 + (2*tau)):nrow(voxel), 1]
xyz <- cbind(x, y, z)
graph_name <- paste("Mapping to 3dim space : ", task, "-voxel", voxel_no, sep="")
PATH_graph <- paste(PATH_attractor, "voxel", voxel_no, '_', task, '.png')
png(PATH_graph)
scatterplot3d(xyz, xlab = "x = t", ylab = "y = t + τ", zlab = "z = t + 2*τ", pch = 16, type="o", main = graph_name)
dev.off()
return (xyz)
}
PATH_rest <- paste(PATH, 'raw_rest.csv', sep = "")
PATH_tap <- paste(PATH, 'raw_tap.csv', sep = "")
PATH_tau <- paste(PATH, 'TAUautocor.csv', sep = "")
rest <- read.csv(PATH_rest)
tap <- read.csv(PATH_tap)
taus <- read.csv(PATH_tau)
for(i in 1:nrow(taus)){
voxel_rest <- rest[i]
voxel_tap <- tap[i]
tau_rest <- taus[i, 1]
tau_tap <- taus[i, 2]
attractor_rest <- Attractor(voxel_rest, tau_rest, i, "Rest")
attractor_tap <- Attractor(voxel_tap, tau_tap, i, "Tapping")
#TDAvec(attractor_rest, i)
#TDAvec(attractor_tap, i)
}
if (!require(package = "TDA")) {
install.packages(pkgs = "TDA")
}
if (!require(package = "scatterplot3d")) {
install.packages(pkgs = "scatterplot3d")
}
library(TDA)
library(scatterplot3d)
PATH_rest <- paste(PATH, 'raw_rest.csv', sep = "")
PATH_tap <- paste(PATH, 'raw_tap.csv', sep = "")
PATH_tau <- paste(PATH, 'TAUautocor.csv', sep = "")
rest <- read.csv(PATH_rest)
tap <- read.csv(PATH_tap)
taus <- read.csv(PATH_tau)
for(i in 1:nrow(taus)){
voxel_rest <- rest[i]
voxel_tap <- tap[i]
tau_rest <- taus[i, 1]
tau_tap <- taus[i, 2]
attractor_rest <- Attractor(voxel_rest, tau_rest, i, "Rest")
attractor_tap <- Attractor(voxel_tap, tau_tap, i, "Tapping")
#TDAvec(attractor_rest, i)
#TDAvec(attractor_tap, i)
}
Attractor <- function(voxel, tau, voxel_no, task){
x <- voxel[1:(nrow(voxel) - (2*tau)), 1]
y <- voxel[(1 + tau):(nrow(voxel) - tau), 1]
z <- voxel[(1 + (2*tau)):nrow(voxel), 1]
xyz <- cbind(x, y, z)
graph_name <- paste("Mapping to 3dim space : ", task, "-voxel", voxel_no, sep="")
PATH_graph <- paste(PATH_attractor, "voxel", voxel_no, '_', task, '.png', sep="")
png(PATH_graph)
scatterplot3d(xyz, xlab = "x = t", ylab = "y = t + τ", zlab = "z = t + 2*τ", pch = 16, type="o", main = graph_name)
dev.off()
return (xyz)
}
PATH_rest <- paste(PATH, 'raw_rest.csv', sep = "")
PATH_tap <- paste(PATH, 'raw_tap.csv', sep = "")
PATH_tau <- paste(PATH, 'TAUautocor.csv', sep = "")
rest <- read.csv(PATH_rest)
tap <- read.csv(PATH_tap)
taus <- read.csv(PATH_tau)
for(i in 1:nrow(taus)){
voxel_rest <- rest[i]
voxel_tap <- tap[i]
tau_rest <- taus[i, 1]
tau_tap <- taus[i, 2]
attractor_rest <- Attractor(voxel_rest, tau_rest, i, "Rest")
attractor_tap <- Attractor(voxel_tap, tau_tap, i, "Tapping")
#TDAvec(attractor_rest, i)
#TDAvec(attractor_tap, i)
}
Attractor <- function(voxel, tau, voxel_no, task){
x <- voxel[1:(nrow(voxel) - (2*tau)), 1]
y <- voxel[(1 + tau):(nrow(voxel) - tau), 1]
z <- voxel[(1 + (2*tau)):nrow(voxel), 1]
xyz <- cbind(x, y, z)
graph_name <- paste("Mapping to 3dim space : ", task, "-voxel", voxel_no, sep="")
PATH_graph <- paste(PATH_attractor, "voxel", voxel_no, '_', task, '.png', sep="")
png(PATH_graph)
scatterplot3d(xyz, xlab = "x = t", ylab = "y = t + τ", zlab = "z = t + 2*τ", pch = 16, type="o", main = graph_name)
dev.off()
return (xyz)
}
PATH_rest <- paste(PATH, 'raw_rest.csv', sep = "")
PATH_tap <- paste(PATH, 'raw_tap.csv', sep = "")
PATH_tau <- paste(PATH, 'TAUautocor.csv', sep = "")
rest <- read.csv(PATH_rest)
tap <- read.csv(PATH_tap)
taus <- read.csv(PATH_tau)
for(i in 1:nrow(taus)){
voxel_rest <- rest[i]
voxel_tap <- tap[i]
tau_rest <- taus[i, 1]
tau_tap <- taus[i, 2]
attractor_rest <- Attractor(voxel_rest, tau_rest, i, "Rest")
attractor_tap <- Attractor(voxel_tap, tau_tap, i, "Tapping")
#TDAvec(attractor_rest, i)
#TDAvec(attractor_tap, i)
}
voxel <- rest[1]
tau <- rest[1,1]
voxel_no <- 1
task <- 'rest'
x <- voxel[1:(nrow(voxel) - (2*tau)), 1]
y <- voxel[(1 + tau):(nrow(voxel) - tau), 1]
z <- voxel[(1 + (2*tau)):nrow(voxel), 1]
xyz <- cbind(x, y, z)
graph_name <- paste("Mapping to 3dim space : ", task, "-voxel", voxel_no, sep="")
PATH_graph <- paste(PATH_attractor, "voxel", voxel_no, '_', task, '.png', sep="")
png(PATH_graph)
scatterplot3d(xyz, xlab = "x = t", ylab = "y = t + τ", zlab = "z = t + 2*τ", pch = 16, type="o", main = graph_name)
xyz <- cbind(x, y, z)
x <- voxel[1:(nrow(voxel) - (2*tau)), 1]
y <- voxel[(1 + tau):(nrow(voxel) - tau), 1]
y
y <- voxel[(1 + tau):(nrow(voxel) - tau), 1]
y <- voxel[(1 + tau):(nrow(voxel) - (tau)), 1]
nrow(voxel)
nrow(voxel) - (tau)
tau
tau <- 1
x <- voxel[1:(nrow(voxel) - (2*tau)), 1]
y <- voxel[(1 + tau):(nrow(voxel) - (tau)), 1]
z <- voxel[(1 + (2*tau)):nrow(voxel), 1]
xyz <- cbind(x, y, z)
graph_name <- paste("Mapping to 3dim space : ", task, "-voxel", voxel_no, sep="")
PATH_graph <- paste(PATH_attractor, "voxel", voxel_no, '_', task, '.png', sep="")
png(PATH_graph)
scatterplot3d(xyz, xlab = "x = t", ylab = "y = t + τ", zlab = "z = t + 2*τ", pch = 16, type="o", main = graph_name)
dev.off()
scatterplot3d(xyz, xlab = "x = t", ylab = "y = t + τ", zlab = "z = t + 2*τ", pch = 16, type="o", main = graph_name)
dev.off()
PATH_graph
task
png(PATH_graph)
PATH <- '../tameshi/20170130ar/12ch/'
ms <- 3
DIR_attractor <- paste(PATH, 'TDAvec_autocor_attractor', sep="")
PATH_attractor <- paste(DIR_attractor, '/', sep="")
if(!file.exists(PATH_attractor)) {
dir.create(DIR_attractor)
}
Attractor <- function(voxel, tau, voxel_no, task){
x <- voxel[1:(nrow(voxel) - (2*tau)), 1]
y <- voxel[(1 + tau):(nrow(voxel) - (tau)), 1]
z <- voxel[(1 + (2*tau)):nrow(voxel), 1]
xyz <- cbind(x, y, z)
graph_name <- paste("Mapping to 3dim space : ", task, "-voxel", voxel_no, sep="")
PATH_graph <- paste(PATH_attractor, "voxel", voxel_no, '_', task, '.png', sep="")
png(PATH_graph)
scatterplot3d(xyz, xlab = "x = t", ylab = "y = t + τ", zlab = "z = t + 2*τ", pch = 16, type="o", main = graph_name)
dev.off()
return (xyz)
}
PATH_rest <- paste(PATH, 'raw_rest.csv', sep = "")
PATH_tap <- paste(PATH, 'raw_tap.csv', sep = "")
PATH_tau <- paste(PATH, 'TAUautocor.csv', sep = "")
rest <- read.csv(PATH_rest)
tap <- read.csv(PATH_tap)
taus <- read.csv(PATH_tau)
for(i in 1:nrow(taus)){
voxel_rest <- rest[i]
voxel_tap <- tap[i]
tau_rest <- taus[i, 1]
tau_tap <- taus[i, 2]
attractor_rest <- Attractor(voxel_rest, tau_rest, i, "Rest")
attractor_tap <- Attractor(voxel_tap, tau_tap, i, "Tapping")
#TDAvec(attractor_rest, i)
#TDAvec(attractor_tap, i)
}
Attractor <- function(voxel, tau, voxel_no, task){
x <- voxel[1:(nrow(voxel) - (2*tau)), 1]
y <- voxel[(1 + tau):(nrow(voxel) - (tau)), 1]
z <- voxel[(1 + (2*tau)):nrow(voxel), 1]
xyz <- cbind(x, y, z)
graph_name <- paste("Mapping to 3dim space : ", task, "-voxel", voxel_no, sep="")
PATH_graph <- paste(PATH_attractor, "voxel", voxel_no, '_', task, '.png', sep="")
png(PATH_graph)
scatterplot3d(xyz, xlab = "x = t", ylab = "y = t + τ", zlab = "z = t + 2*τ", pch = 16, type="o", main = graph_name)
dev.off()
print(voxel_no)
return (xyz)
}
PATH_rest <- paste(PATH, 'raw_rest.csv', sep = "")
PATH_tap <- paste(PATH, 'raw_tap.csv', sep = "")
PATH_tau <- paste(PATH, 'TAUautocor.csv', sep = "")
rest <- read.csv(PATH_rest)
tap <- read.csv(PATH_tap)
taus <- read.csv(PATH_tau)
for(i in 1:nrow(taus)){
voxel_rest <- rest[i]
voxel_tap <- tap[i]
tau_rest <- taus[i, 1]
tau_tap <- taus[i, 2]
attractor_rest <- Attractor(voxel_rest, tau_rest, i, "Rest")
attractor_tap <- Attractor(voxel_tap, tau_tap, i, "Tapping")
#TDAvec(attractor_rest, i)
#TDAvec(attractor_tap, i)
}
Attractor <- function(voxel, tau, voxel_no, task){
x <- voxel[1:(nrow(voxel) - (2*tau)), 1]
y <- voxel[(1 + tau):(nrow(voxel) - (tau)), 1]
z <- voxel[(1 + (2*tau)):nrow(voxel), 1]
xyz <- cbind(x, y, z)
graph_name <- paste("Mapping to 3dim space : ", task, "-voxel", voxel_no, sep="")
PATH_graph <- paste(PATH_attractor, "voxel", voxel_no, '_', task, '.png', sep="")
png(PATH_graph)
scatterplot3d(xyz, xlab = "x = t", ylab = "y = t + τ", zlab = "z = t + 2*τ", pch = 16, type="o", main = graph_name)
dev.off()
print(graph_name)
return (xyz)
}
PATH_rest <- paste(PATH, 'raw_rest.csv', sep = "")
PATH_tap <- paste(PATH, 'raw_tap.csv', sep = "")
PATH_tau <- paste(PATH, 'TAUautocor.csv', sep = "")
rest <- read.csv(PATH_rest)
tap <- read.csv(PATH_tap)
taus <- read.csv(PATH_tau)
for(i in 1:nrow(taus)){
voxel_rest <- rest[i]
voxel_tap <- tap[i]
tau_rest <- taus[i, 1]
tau_tap <- taus[i, 2]
attractor_rest <- Attractor(voxel_rest, tau_rest, i, "Rest")
attractor_tap <- Attractor(voxel_tap, tau_tap, i, "Tapping")
#TDAvec(attractor_rest, i)
#TDAvec(attractor_tap, i)
}
PATH <- '../tameshi/20170130ar/mb/RawData/'
if (!require(package = "TDA")) {
install.packages(pkgs = "TDA")
}
if (!require(package = "scatterplot3d")) {
install.packages(pkgs = "scatterplot3d")
}
library(TDA)
library(scatterplot3d)
print('################ TDAvec_autocor.r excution ###################')
# コマンドライン引数でraw_tap.csv/raw_rest.csv, TAUautocor.csvがあるディレクトリまでのパスを取得
# PATH = commandArgs(trailingOnly=TRUE)[1]
PATH <- '../tameshi/20170130ar/mb/RawData/'
ms <- 3
DIR_attractor <- paste(PATH, 'TDAvec_autocor_attractor', sep="")
PATH_attractor <- paste(DIR_attractor, '/', sep="")
if(!file.exists(PATH_attractor)) {
dir.create(DIR_attractor)
}
Attractor <- function(voxel, tau, voxel_no, task){
x <- voxel[1:(nrow(voxel) - (2*tau)), 1]
y <- voxel[(1 + tau):(nrow(voxel) - (tau)), 1]
z <- voxel[(1 + (2*tau)):nrow(voxel), 1]
xyz <- cbind(x, y, z)
graph_name <- paste("Mapping to 3dim space : ", task, "-voxel", voxel_no, sep="")
PATH_graph <- paste(PATH_attractor, "voxel", voxel_no, '_', task, '.png', sep="")
png(PATH_graph)
scatterplot3d(xyz, xlab = "x = t", ylab = "y = t + τ", zlab = "z = t + 2*τ", pch = 16, type="o", main = graph_name)
dev.off()
print(graph_name)
return (xyz)
}
TDAvec <- function(attractor, voxel_no){
tda <- ripsDiag(X = attractor, maxdimension = 2, maxscale = ms)
}
PATH_rest <- paste(PATH, 'raw_rest.csv', sep = "")
PATH_tap <- paste(PATH, 'raw_tap.csv', sep = "")
PATH_tau <- paste(PATH, 'TAUautocor.csv', sep = "")
rest <- read.csv(PATH_rest)
tap <- read.csv(PATH_tap)
taus <- read.csv(PATH_tau)
for(i in 1:nrow(taus)){
voxel_rest <- rest[i]
voxel_tap <- tap[i]
tau_rest <- taus[i, 1]
tau_tap <- taus[i, 2]
attractor_rest <- Attractor(voxel_rest, tau_rest, i, "Rest")
attractor_tap <- Attractor(voxel_tap, tau_tap, i, "Tapping")
#TDAvec(attractor_rest, i)
#TDAvec(attractor_tap, i)
}
if (!require(package = "TDA")) {
install.packages(pkgs = "TDA")
}
if (!require(package = "scatterplot3d")) {
install.packages(pkgs = "scatterplot3d")
}
library(TDA)
library(scatterplot3d)
print('################ TDAvec_autocor.r excution ###################')
# コマンドライン引数でraw_tap.csv/raw_rest.csv, TAUautocor.csvがあるディレクトリまでのパスを取得
# PATH = commandArgs(trailingOnly=TRUE)[1]
PATH <- '../tameshi/20170130ar/12ch/RawData/'
ms <- 3
DIR_attractor <- paste(PATH, 'TDAvec_autocor_attractor', sep="")
PATH_attractor <- paste(DIR_attractor, '/', sep="")
if(!file.exists(PATH_attractor)) {
dir.create(DIR_attractor)
}
Attractor <- function(voxel, tau, voxel_no, task){
x <- voxel[1:(nrow(voxel) - (2*tau)), 1]
y <- voxel[(1 + tau):(nrow(voxel) - (tau)), 1]
z <- voxel[(1 + (2*tau)):nrow(voxel), 1]
xyz <- cbind(x, y, z)
graph_name <- paste("Mapping to 3dim space : ", task, "-voxel", voxel_no, sep="")
PATH_graph <- paste(PATH_attractor, "voxel", voxel_no, '_', task, '.png', sep="")
png(PATH_graph)
scatterplot3d(xyz, xlab = "x = t", ylab = "y = t + τ", zlab = "z = t + 2*τ", pch = 16, type="o", main = graph_name)
dev.off()
print(graph_name)
return (xyz)
}
TDAvec <- function(attractor, voxel_no){
tda <- ripsDiag(X = attractor, maxdimension = 2, maxscale = ms)
}
PATH_rest <- paste(PATH, 'raw_rest.csv', sep = "")
PATH_tap <- paste(PATH, 'raw_tap.csv', sep = "")
PATH_tau <- paste(PATH, 'TAUautocor.csv', sep = "")
rest <- read.csv(PATH_rest)
tap <- read.csv(PATH_tap)
taus <- read.csv(PATH_tau)
for(i in 1:nrow(taus)){
voxel_rest <- rest[i]
voxel_tap <- tap[i]
tau_rest <- taus[i, 1]
tau_tap <- taus[i, 2]
attractor_rest <- Attractor(voxel_rest, tau_rest, i, "Rest")
attractor_tap <- Attractor(voxel_tap, tau_tap, i, "Tapping")
#TDAvec(attractor_rest, i)
#TDAvec(attractor_tap, i)
}
if (!require(package = "TDA")) {
install.packages(pkgs = "TDA")
}
if (!require(package = "scatterplot3d")) {
install.packages(pkgs = "scatterplot3d")
}
library(TDA)
library(scatterplot3d)
print('################ TDAvec_autocor.r excution ###################')
# コマンドライン引数でraw_tap.csv/raw_rest.csv, TAUautocor.csvがあるディレクトリまでのパスを取得
# PATH = commandArgs(trailingOnly=TRUE)[1]
PATH <- '../tameshi/20170130ar/mb/MAL5/'
ms <- 3
DIR_attractor <- paste(PATH, 'TDAvec_autocor_attractor', sep="")
PATH_attractor <- paste(DIR_attractor, '/', sep="")
if(!file.exists(PATH_attractor)) {
dir.create(DIR_attractor)
}
Attractor <- function(voxel, tau, voxel_no, task){
x <- voxel[1:(nrow(voxel) - (2*tau)), 1]
y <- voxel[(1 + tau):(nrow(voxel) - (tau)), 1]
z <- voxel[(1 + (2*tau)):nrow(voxel), 1]
xyz <- cbind(x, y, z)
graph_name <- paste("Mapping to 3dim space : ", task, "-voxel", voxel_no, sep="")
PATH_graph <- paste(PATH_attractor, "voxel", voxel_no, '_', task, '.png', sep="")
png(PATH_graph)
scatterplot3d(xyz, xlab = "x = t", ylab = "y = t + τ", zlab = "z = t + 2*τ", pch = 16, type="o", main = graph_name)
dev.off()
print(graph_name)
return (xyz)
}
TDAvec <- function(attractor, voxel_no){
tda <- ripsDiag(X = attractor, maxdimension = 2, maxscale = ms)
}
PATH_rest <- paste(PATH, 'raw_rest.csv', sep = "")
PATH_tap <- paste(PATH, 'raw_tap.csv', sep = "")
PATH_tau <- paste(PATH, 'TAUautocor.csv', sep = "")
rest <- read.csv(PATH_rest)
tap <- read.csv(PATH_tap)
taus <- read.csv(PATH_tau)
for(i in 1:nrow(taus)){
voxel_rest <- rest[i]
voxel_tap <- tap[i]
tau_rest <- taus[i, 1]
tau_tap <- taus[i, 2]
attractor_rest <- Attractor(voxel_rest, tau_rest, i, "Rest")
attractor_tap <- Attractor(voxel_tap, tau_tap, i, "Tapping")
#TDAvec(attractor_rest, i)
#TDAvec(attractor_tap, i)
}
attractor
attractor_rest
tda <- ripsDiag(X = attractor, maxdimension = 2, maxscale = ms)
tda <- ripsDiag(X = attractor_rest, maxdimension = 2, maxscale = ms)
tda
plot(tda$diagram)
plot(tda$diagram)
tda
tda$diagram
plot(tda$diagram)
plot.new()
dev.odd()
dev.off()
plot(rest)
plot(rest)
PATH <- '../tameshi/20170130ar/mb/MAL5/'
ms <- 3
DIR_attractor <- paste(PATH, 'TDAvec_autocor_attractor', sep="")
PATH_attractor <- paste(DIR_attractor, '/', sep="")
if(!file.exists(PATH_attractor)) {
dir.create(DIR_attractor)
}
PATH_rest <- paste(PATH, 'raw_rest.csv', sep = "")
PATH_tap <- paste(PATH, 'raw_tap.csv', sep = "")
PATH_tau <- paste(PATH, 'TAUautocor.csv', sep = "")
rest <- read.csv(PATH_rest)
tap <- read.csv(PATH_tap)
taus <- read.csv(PATH_tau)
i = 1
voxel_rest <- rest[i]
voxel_tap <- tap[i]
tau_rest <- taus[i, 1]
tau_tap <- taus[i, 2]
attractor_rest <- Attractor(voxel_rest, tau_rest, i, "Rest")
attractor_tap <- Attractor(voxel_tap, tau_tap, i, "Tapping")
Attractor <- function(voxel, tau, voxel_no, task){
x <- voxel[1:(nrow(voxel) - (2*tau)), 1]
y <- voxel[(1 + tau):(nrow(voxel) - (tau)), 1]
z <- voxel[(1 + (2*tau)):nrow(voxel), 1]
xyz <- cbind(x, y, z)
graph_name <- paste("Mapping to 3dim space : ", task, "-voxel", voxel_no, sep="")
PATH_graph <- paste(PATH_attractor, "voxel", voxel_no, '_', task, '.png', sep="")
#png(PATH_graph)
#scatterplot3d(xyz, xlab = "x = t", ylab = "y = t + τ", zlab = "z = t + 2*τ", pch = 16, type="o", main = graph_name)
#dev.off()
print(graph_name)
return (xyz)
}
attractor_rest <- Attractor(voxel_rest, tau_rest, i, "Rest")
attractor_tap <- Attractor(voxel_tap, tau_tap, i, "Tapping")
attractor <- attractor_rest
tda <- ripsDiag(X = attractor, maxdimension = 2, maxscale = ms)
plot(tda$diagram)
plot(tda$diagram)
getwd()
plot(tda$diagram)
dev.off()
getwd()

install.package("R6")
install.packages("R6")
Japan
library(R6)
Q
quit
quit()
setwd("~/Desktop/nakayama/Research/Research_programs")
library(TDA)
print('################ TDAvec_autocor.r excution ###################')
PATH <- '../tameshi/20170130ar/12ch/'
PATH_tap <=[]
PATH_tap <- paste(PATH, 'raw_tap.csv', sep = "")
PATH_tap
PATH_rest <- paste(PATH, 'raw_rest.csv', sep = "")
PATH_tau <- paste(PATH, 'TAUautocor.csv', sep = "")
rest <- read.csv(PATH_rest)
rest
tau_method <- 'autocor'
PATH_tau <- paste(PATH, 'TAU', tau_method, '.csv', sep = "")
PATH_tau
rest <- read.csv(PATH_rest)
tap <- read.csv(PATH_tap)
taus <- read.csv(PATH_tau)
taus <- read.csv(PATH_tau)
taus
tap
rest[1]
voxel <- rest[1]
voxel <- rest[0]
vocxel
voxel
voxel <- rest[1]
voxel
taus
tasu[1,1]
taus[1,1]
taus[1,2]
tau <- taus[1,1]
nrow(voxel)
x <- voxel[1:(nrow(voxel) - (2*tau)), 1]
x
length(x)
voxel
x <- voxel[(1 + tau):(nrow(voxel) - tau), 1]
x <- voxel[1:(nrow(voxel) - (2*tau)), 1]
y <- voxel[(1 + tau):(nrow(voxel) - tau), 1]
y
y <- voxel[(1 + (2*tau)):nrow(voxel), 1]
y <- voxel[(1 + tau):(nrow(voxel) - tau), 1]
z <- voxel[(1 + (2*tau)):nrow(voxel), 1]
z
xyz <- cbind(x, y, z)
xyz
rest
length(rest)
for(i in 1:length(rest)){}
for(i in 1:length(rest)){
print(i)
}
nrow(taus)
taus
taus[1,1]
taus[1,2]
taus[2,2]
taus[3,2]
xyz
attractor <- xyz
ms <- 3
tda <- ripsDiag(X = attractor, maxdimension = 2, maxscale = ms)
tda
tda <- ripsDiag(X = attractor, maxdimension = 1:2, maxscale = ms)
D <- tda[["diagram"]]]
D <- tda[["diagram"]]
D
plot(D)
plot(D, barcode = TRUE)
D
D
mask <- D$dimension
D[1]
D$dimension
D$dimension
length(D)
nrow(D)
D[[1]]
D[:, 1
D[:, 1]
tda$diagram$dimension
tda
D
D <- as.data.frame(D)
D
D[, 1:3]
D <- D[, 1:3]
View(D)
tda
a <- tda$diagram
D <- as.data.frame(D)
diagram <- tda$diagram[, 1:3]
diagram <- as.data.frame(tda$diagram[, 1:3])
diagram
mask <- diagram$dimension == 2
mask
diagram[mask]
diagram[diagram$dimension == 2]
diagram
diagram[diagram$dimension == 1]
diagram[diagram$dimension = 1]
diagram[diagram$dimension = 1, ]
diagram[diagram$dimension == 1, ]
one <- diagram[diagram$dimension == 1, ]
plot(one, barcode = TRUE)
tda
attractor
tda <- ripsDiag(X = attractor, maxdimension = 2, maxscale = ms)
tda
plot(tda)
plot(tda$diagram)
tda$diagram
tda$diagram$dimention
tda$diagram[1]
tda$diagram[:,1]
a <- tda$diagram
a
a[:]
a[:,1]
a[1,:]
a==1
plot(tda$diagram==1)
tda$diagram$chr
tda$diagram$
tda$diagram$s
tda$diagram[]
tda$diagram[][1]
tda$diagram[1]
tda$diagram[1:3]
tda$diagram[,1]
tda$diagram[,1]==1
plot(tda$diagram[,1]==1)
plot(tda$diagram[,1]==1, barcode=TRUE)
tda$diagram[,1]
tda <- ripsDiag(X = attractor, maxdimension = 2, maxscale = ms)
tda$diagram[,1]
mode(tda$diagram)
tda$diagram[[1]]
tda$diagram[[:]]
tda$diagram[
]
tda$diagram[0]
is.array(tda$diagram)
is.data.frame(tda$diagram)
names(tda$diagram)
nrow(tda$diagram)
ncol(tda$diagram)
tda$diagram[1,1]
tda$diagram[,1]
tda$diagram[[1]]
tda$diagram[1,
]
tda$diagram[3,]
tda$diagram[:,]
tda$diagram[,1]
tda$diagram[,1]==1
mask <- tda$diagram[,1]==1
mask
tda$diagram[,mask]
tda$diagram[mask]
tda$diagram
tda$diagram[mask]
tda$diagram[,mask]
tda$diagram[mask,]
plot(tda$diagram[mask,])
plot(tda$diagram[mask,], barcode=TRUE)
plot(tda$diagram)
warnings()
plot(tda$diagram)
mask <- tda$diagram[,1]==2
plot(tda$diagram[mask,])
tda$diagram[mask,]
is.array(tda)
is.factor(tda)
is.list(tda)
tda[1]
tda[2]
tda[3]
tda[4]
a <- as.data.frame(tda$diagram)
tda
plot(tda[["diagram"]])
tda[["diagram"]]
a <- tda[["diagram"]]
a[1]
a[1,]
a[,1]
mask <- a[,1]==1
mask
a[mask]
a[mask,]
plot(a[mask,])
plot(a[mask,], barcode=TRUE)
a
a
plot(a)
plot(a[1])
plot(a)
plot(a, barcode = TRUE)
plot(a, barcode = TRUE, dimension = 1)
plot(a, barcode = TRUE, dimension = 0)
plot(a, barcode = TRUE, dimension = 2)
plot(a, barcode = TRUE, dimension = 0)
plot(a, barcode = TRUE, dimension = 0, x = 3)
plot(a, barcode = TRUE, dimension = 0, xlim = 3)
plot(a, barcode = TRUE, dimension = 0)
plot(a, barcode = TRUE, dimension = 1)
plot(a, barcode = TRUE, dimension = 1, diagLim = 3)
plot(a, barcode = TRUE, dimension = 1, xlim = c(0, ms))
plot(a, barcode = TRUE, dimension = 1, xlim = c(ms, 0.1))
plot(a, barcode = TRUE, dimension = 1, xlim = c(ms, 1))
ms
plot(a, barcode = TRUE, dimension = 1, x = c(ms,0.1)
)
plot(a, barcode = TRUE, dimension = 1, xlim=x(3,1)
)
hist(a)
plot(a, barcode = TRUE, dimension = 1, diagLim = c(0,1))
plot(a, barcode = TRUE, dimension = 1, diagLim = c(0,3))
plot(a, barcode = TRUE, dimension = 0, diagLim = c(0,3))
plot(a, barcode = TRUE, dimension = 0, diagLim = c(0,3, 0.5))
plot(a, barcode = TRUE, dimension = 0, diagLim = c(0,3))
plot(a, barcode = TRUE, dimension = 1, diagLim = c(0,3))
plot(a, barcode = TRUE, dimension = 2, diagLim = c(0,3))
plot(a, barcode = TRUE, dimension = 2, diagLim = c(0,4))
plot(a, barcode = TRUE, dimension = 2, diagLim = c(3,4))
plot(a, barcode = TRUE, dimension = 2, diagLim = c(3,0.1))
plot(a, barcode = TRUE, dimension = 2, diagLim = c(100))
plot(a, barcode = TRUE, dimension = 2, diagLim = c(100,1))
plot(a, barcode = TRUE, dimension = 1
)
plot(a, barcode = TRUE, dimension = 2, diagLim = c(0, 100))
c(0,10)
c(0:10)
c(0:10, 0.5)
plot(a, barcode = TRUE, dimension = 2, diagLim = c(19, 1))
plot(a, barcode = TRUE, dimension = 2, diagLim = c(3, 1))
plot(a, barcode = TRUE, dimension = 2, diagLim = c(3, 3))
plot(a, barcode = TRUE, dimension = 2, diagLim = c(3, 0.1))
plot(a, barcode = TRUE, dimension = 2, diagLim = c(3, 0.1))
plot(a, barcode = TRUE, dimension = 2, diagLim = c(3,1))
plot(a, barcode = TRUE, dimension = 2, col = 3
)
plot(a, barcode = TRUE, dimension = 2, col = 1)
plot(a, barcode = TRUE, dimension = 2, x = 3)
plot(a, barcode = TRUE, dimension = 2, x = 1)
plot(a, barcode = TRUE, dimension = 2, x=c(0, 3, 0.5))
plot(a, barcode = TRUE, dimension = 2, rotated = FALSE)
plot(a, barcode = TRUE, dimension = 2, band = TRUE)
plot(a, barcode = TRUE, dimension = 2, band = FALSE)
plot(a, barcode = TRUE, dimension = 2, lab.line = 3)
plot(a, barcode = TRUE, dimension = 2, lab.line = 2)
plot(a, barcode = TRUE, dimension = 2, lab.line = 1)
plot(a, barcode = TRUE, dimension = 2, add = TRUE)
plot(a, barcode = TRUE, dimension = 2)
plot(a, barcode = TRUE, dimension = 2, ... = c(3,1))
plot(a, barcode = TRUE, dimension = 2
)
plot(a, barcode = TRUE, dimension = 2)
plot(a, barcode = TRUE, dimension = 2, xlim=c(10,3))
tda <- ripsDiag(X = attractor, maxdimension = 2, maxscale)
a
b <- alphaComplexDiag(X = attractor)
b
plot(b$diagram)
b <- alphaComplexDiag(X = attractor, printProgress = TRUE)
plot(b[["diagram"]], diagLim = c(0, 10))
plot(b[["diagram"]], barcode=TRUE, diagLim = c(0, 10))
plot(b[["diagram"]], barcode = TRUE, diagLim = c(0, 10))
plot(b[["diagram"]], barcode = TRUE, diagLim = c(0, 3))
plot(b[["diagram"]], barcode = TRUE, xlim = c(0,3))
b <- alphaComplexDiag(X = attractor, printProgress = TRUE, DiagLim = 3)
plot(c(min(a[,2]), max(a[,3])-1.5), c(1,nrow(a) + 1))
plot(c(min(a[,2]), max(a[,3])-1.5), c(1,nrow(a) + 1), type="n", xlab = "radius", ylab ="", xlim=c(min(a[,2]), max(a[,3])-1.5), ylim=c(1, nrow(a) + 1), yaxt ='n')
segments(a[,2], 1:nrow(a), sort(a[,3]), 1:nrow(a), lwd=2)
a[,3]
sort(a[,3])
plot(a, barcode = TRUE, dimension = 2, sort(a[,3])
)
plot(a, barcode = TRUE, dimension = 2, sort(a[,3]))
plot(a, barcode = TRUE, dimension = 2, sort(a[,3]), diagLim = c(0,3))
plot(a, barcode = TRUE, dimension = 0, sort(a[,3]), diagLim = c(0,3))
par(mflow = c(1,3))
plot(a, barcode = TRUE, dimension = 0, p = 2)
tda2 <- ripsDiag(X = attractor, maxdimension, maxscale, library="GUDHI", printProgress = FALSE)
maxdimention <- 2
maxscale <- 3
tda2 <- ripsDiag(X = attractor, maxdimension, maxscale, library="GUDHI", printProgress = FALSE)
plot(tda$diagram)
plot(tda$diagram, xlim=c())
plot(tda$diagram, xlim=c(1,19))
plot(tda$diagram, diagLim=c(1,19))
plot(tda$diagram, barcode = TRUE, diagLim=c(1,19))
plot(tda$diagram, barcode = TRUE, diagLim=c(1,10))
plot(tda$diagram, barcode = TRUE, diagLim=c(1,8))
plot(tda$diagram, barcode = TRUE, diagLim=c(1,2))
library(phom)
install.packages("whom")
library(phom)
install.packages("phom")
library(phom)
insta;install.packages("phom", repos=)
insta;install.packages("phom", repos="./phom/R/phom.R", type = "source")
install.packages("phom", repos="./phom/R/phom.R", type = "source")
tda <- ripsDiag(X = attractor, maxdimension = 2, maxscale = ms, printProgress = TRUE)
tda <- ripsDiag(X = attractor, maxdimension = 2, maxscale = ms)
barcode(tda$diagram)
if (!require(package = "TDA")) {
install.packages(pkgs = "TDA")
}
Gdiag <- gridDiag(X=attractor, FUN = kde)
Gdiag <- gridDiag(X=attractor, FUN = kde, lim = cbind(Xlim, Ylim))
Gdiag <- gridDiag(X=attractor, FUN = kde, h = 3
)
Xlim <- c(-1.6, 1.6)
Ylim <- c(-1.7, 1.7)
Gdiag <- gridDiag(X=attractor, FUN = kde, lim = cbind(Xlim, Ylim))
Gdiag <- gridDiag(X=attractor, FUN = kde, lim = cbind(Xlim, Ylim))
Gdiag <- gridDiag(X=attractor, lim = cbind(Xlim, Ylim))
plot(tda$diagram)
plot(tda$diagram, barcode = TRUE)
plot(tda$diagram, barcode = TRUE, xlim = c(0, 1))
plot(tda$diagram, barcode = TRUE)
plot(tda$diagram, barcode = TRUE, dimension = 1)
plot(tda$diagram, barcode = TRUE, dimension = 2)
plot(tda$diagram, barcode = TRUE, dimension = 2)
par(new = T)
plot(tda$diagram, barcode = TRUE, dimension = 1)
plot(tda$diagram, barcode = TRUE, dimension = 0)
par(new = T)
plot(tda$diagram, barcode = TRUE, dimension = 2)
plot(tda$diagram, barcode = TRUE, dimension = 2, add=T)
plot(tda$diagram, barcode = TRUE, dimension = 0, add=T)
plot(tda$diagram, barcode = TRUE, dimension = 2, bty = "n")
plot(tda$diagram, barcode = TRUE, dimension = 2, lab.line = c(1,10))
plot(tda$diagram, barcode = TRUE, dimension = 2, lab.line = c(1,3))
plot(tda$diagram, barcode = TRUE, dimension = 2, xlim = c(0,1))
plot(tda$diagram, barcode = TRUE, dimension = 2, xaxt = "n")
plot(tda$diagram, diagLim = c(0,3), barcode = TRUE, dimension = 2)
plot(tda$diagram, clim = c(0,3), barcode = TRUE, dimension = 2)
plot(tda$diagram, xlim = c(0,3), barcode = TRUE, dimension = 2)
plot(tda$diagram, xlim = c(0,3), barcode = TRUE, dimension = 0)
plot(tda$diagram, diagLim = c(0,3), barcode = TRUE, dimension = 0)
plot(tda$diagram, diagLim = c(0,3), dimension = 0)
plot(tda$diagram, diagLim = c(0,3), dimension = 2)
plot(tda$diagram, diagLim = c(0,3), dimension = 2, barcode = TRUE)
plot(tda$diagram, diagLim = c(0,3), dimension = 2,)
plot(tda$diagram, diagLim = c(0,3), dimension = 2,)
plot(tda$diagram, diagLim = c(0,2), dimension = 2,)
plot(tda$diagram, diagLim = c(0,3), dimension = 2,)
plot(tda$diagram, dimension = 2, barcode = TRUE, main = "voxel1")
plot(tda$diagram, dimension = 2, barcode = TRUE, main = "voxel1-2dim")
xyz
plot(xyz)
plot(x, y, z)
scatterplot3d(xyz)
if (!require(package = "scatterplot3d")) {
install.packages(pkgs = "scatterplot3d")
}
library(scatterplot3d)
scatterplot3d(xyz)
length(xyz)
View(xyz)
View(xyz)
tau
voxel
scatterplot3d(xyz, type="l")
scatterplot3d(xyz, type="b")
scatterplot3d(xyz, type="o")
voxel_no <- 1
graph_name <- paste("Mapping-3dim space voxel", voxel_no)
graph_name <- paste("Mapping-3dim space voxel", voxel_no, sep = "")
scatterplot3d(xyz, type="o", main = graph_name)
scatterplot3d(xyz, xlab = "x = t", ylab = "y = t + τ", zlab = "z = t + 2*τ" type="o", main = graph_name)
scatterplot3d(xyz, xlab = "x = t", ylab = "y = t + τ", zlab = "z = t + 2*τ", type="o", main = graph_name)
task =1
task <- 1
if(task == 1){}
if(task == 1){b = "tap"}
voxel <- rest[1]
tau_rest <- taus[1,1]
i = 1
ttractor_rest <- Attractor(voxel_rest, tau_rest, i, "Rest")
Attractor <- function(voxel, tau, voxel_no, task){
x <- voxel[1:(nrow(voxel) - (2*tau)), 1]
y <- voxel[(1 + tau):(nrow(voxel) - tau), 1]
z <- voxel[(1 + (2*tau)):nrow(voxel), 1]
xyz <- cbind(x, y, z)
graph_name <- paste("Mapping to 3dim space : ", task, "-voxel", voxel_no, sep="")
scatterplot3d(xyz, xlab = "x = t", ylab = "y = t + τ", zlab = "z = t + 2*τ", type="o", main = graph_name)
return (xyz)
}
ttractor_rest <- Attractor(voxel_rest, tau_rest, i, "Rest")
ttractor_rest <- Attractor(voxel, tau_rest, i, "Rest")
scatterplot3d(xyz, xlab = "x = t", ylab = "y = t + τ", zlab = "z = t + 2*τ", phc = 16, type="o", main = graph_name)
scatterplot3d(xyz, xlab = "x = t", ylab = "y = t + τ", zlab = "z = t + 2*τ", pch = 16, type="o", main = graph_name)
scatterplot3d(xyz, xlab = "x = t", ylab = "y = t + τ", zlab = "z = t + 2*τ", pch = 16, type="o", main = graph_name)
scatterplot3d(xyz, xlab = "x = t", ylab = "y = t + τ", zlab = "z = t + 2*τ", pch = 16, col = 1, type="o", main = graph_name)
scatterplot3d(xyz, xlab = "x = t", ylab = "y = t + τ", zlab = "z = t + 2*τ", pch = 16, col = blue, type="o", main = graph_name)
scatterplot3d(xyz, xlab = "x = t", ylab = "y = t + τ", zlab = "z = t + 2*τ", pch = 16, cex = 2, type="o", main = graph_name)
scatterplot3d(xyz, xlab = "x = t", ylab = "y = t + τ", zlab = "z = t + 2*τ", pch = 16, type="o", main = graph_name)
scatterplot3d(xyz, xlab = "x = t", ylab = "y = t + τ", zlab = "z = t + 2*τ", cex = 1, pch = 16, type="o", main = graph_name)
scatterplot3d(xyz, xlab = "x = t", ylab = "y = t + τ", zlab = "z = t + 2*τ", col = "blue", pch = 16, type="o", main = graph_name)
scatterplot3d(xyz, xlab = "x = t", ylab = "y = t + τ", zlab = "z = t + 2*τ", color = "blue", pch = 16, type="o", main = graph_name)
scatterplot3d(xyz, xlab = "x = t", ylab = "y = t + τ", zlab = "z = t + 2*τ", color = "blue", pch = 16, type="c", main = graph_name)
scatterplot3d(xyz, xlab = "x = t", ylab = "y = t + τ", zlab = "z = t + 2*τ", color = "blue", pch = 16, type="o", main = graph_name)
scatterplot3d(xyz, xlab = "x = t", ylab = "y = t + τ", zlab = "z = t + 2*τ", pch = 16, type="o", main = graph_name)
dir.create(tameshi)
dir.create('tameshi')
DIR_attractor <- paste(PATH, 'TDAvec_attractor', sep="")
dir.create(DIR_attractor)
PATH_attractor <- paste(PATH, 'TDAvec_attractor\', sep="")
)
a
""
ああ
;

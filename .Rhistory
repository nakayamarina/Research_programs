install.package("R6")
install.packages("R6")
Japan
library(R6)
Q
quit
quit()
setwd("~/Desktop/nakayama/Research/Research_programs")
PATH <- '../tameshi/20170130ar/mb/MAL5/'
# TDAvec関数で使うripsDiagのmaxsxaleの値設定
ms <- 3
# TDAvec_autocor_attractorのディレクトリ名・パス
DIR_attractor <- paste(PATH, 'TDAvec_autocor_attractor', sep="")
PATH_attractor <- paste(DIR_attractor, '/', sep="")
# 読み込みたいファイルのパス
PATH_rest <- paste(PATH, 'raw_rest.csv', sep = "")
PATH_tap <- paste(PATH, 'raw_tap.csv', sep = "")
PATH_tau <- paste(PATH, 'TAUautocor.csv', sep = "")
# csvファイルの読み込み
rest <- read.csv(PATH_rest)
tap <- read.csv(PATH_tap)
taus <- read.csv(PATH_tau)
PATH <- '../Data_block/20170130ar/mb/MAL5/'
# csvファイルの読み込み
rest <- read.csv(PATH_rest)
tap <- read.csv(PATH_tap)
taus <- read.csv(PATH_tau)
# TDAvec関数で使うripsDiagのmaxsxaleの値設定
ms <- 3
# TDAvec_autocor_attractorのディレクトリ名・パス
DIR_attractor <- paste(PATH, 'TDAvec_autocor_attractor', sep="")
PATH_attractor <- paste(DIR_attractor, '/', sep="")
# 読み込みたいファイルのパス
PATH_rest <- paste(PATH, 'raw_rest.csv', sep = "")
PATH_tap <- paste(PATH, 'raw_tap.csv', sep = "")
PATH_tau <- paste(PATH, 'TAUautocor.csv', sep = "")
# csvファイルの読み込み
rest <- read.csv(PATH_rest)
tap <- read.csv(PATH_tap)
taus <- read.csv(PATH_tau)
voxel_reset <- reset[1]
voxel_reset <- rest[1]
tau_rest <- taus[1,1]
i <- 1
x <- voxel[1:(nrow(voxel) - (2*tau)), 1]
# 元データからτ分ずらしたデータ
y <- voxel[(1 + tau):(nrow(voxel) - (tau)), 1]
# 元データから2*τ分ずらしたデータ
z <- voxel[(1 + (2*tau)):nrow(voxel), 1]
voxel <- voxel_rest
voxel <- voxel_reset
x <- voxel[1:(nrow(voxel) - (2*tau)), 1]
# 元データからτ分ずらしたデータ
y <- voxel[(1 + tau):(nrow(voxel) - (tau)), 1]
# 元データから2*τ分ずらしたデータ
z <- voxel[(1 + (2*tau)):nrow(voxel), 1]
tau <- tau_rest
x <- voxel[1:(nrow(voxel) - (2*tau)), 1]
# 元データからτ分ずらしたデータ
y <- voxel[(1 + tau):(nrow(voxel) - (tau)), 1]
# 元データから2*τ分ずらしたデータ
z <- voxel[(1 + (2*tau)):nrow(voxel), 1]
xyz <- cbind(x, y, z)
View(xyz)
scatterplot3d(xyz, xlab = "x = t", ylab = "y = t + τ", zlab = "z = t + 2*τ", pch = 16, type="o")
install.packages(pkgs = "scatterplot3d")
library(scatterplot3d)
scatterplot3d(xyz, xlab = "x = t", ylab = "y = t + τ", zlab = "z = t + 2*τ", pch = 16, type="o")
tda <- ripsDiag(X = xyz, maxdimension = 2, maxscale = ms)
library(TDA)
library(TDA)
tda <- ripsDiag(X = xyz, maxdimension = 2, maxscale = ms)
plot(tda$diagram, barcode = TRUE)
tda <- ripsDiag(X = xyz, maxdimension = 2, maxscale = 1.5)
plot(tda$diagram, barcode = TRUE)
xyz
x
x <- [100, 200, 300, 100, 300, 100, 200, 300,]
x <- [100, 200, 300, 100, 300, 100, 200, 300]
x <- c(100, 200, 300, 100, 300, 100, 200, 300)
x
y <- c(100, 100, 100, 200, 200, 300, 300, 300)
z <- c(0,0,0,0,0,0,0,0)
xyz <- cbind(x, y, z)
plot(xyz)
x <- c(150, 200, 250, 150, 250, 150, 200, 250)
xyz <- cbind(x, y, z)
plot(xyz)
z <- c(0,0,0,50,50,100,100,100)
xyz <- cbind(x, y, z)
plot(xyz)
scatterplot3d(xyz)
tda <- ripsDiag(X = xyz, maxdimension = 2, maxscale = ms)
plot(tda$diagram, barcode = TRUE)
tda <- ripsDiag(X = xyz, maxdimension = 2, maxscale = 10)
plot(tda$diagram, barcode = TRUE)
tda <- ripsDiag(X = xyz, maxdimension = 2, maxscale = 100)
plot(tda$diagram, barcode = TRUE)
tda <- ripsDiag(X = xyz, maxdimension = 2, maxscale = 500)
plot(tda$diagram, barcode = TRUE)
